(defcfg
process-unmapped-keys yes
)

(defsrc
esc     1     2     3     4     5     6     7     8     9     0     -     =     bspc
tab     q     w     e     r     t     y     u     i     o     p     [     ]     \
caps    a     s     d     f     g     h     j     k     l     ;     '     ret
lsft    z     x     c     v     b     n     m     ,     .     /     rsft
lctl    lmet  lalt              spc               ralt  rmet  rctl
)

(deflayer base
_       _       _       _       _       _       _       _       _       _       _       _       _       bspc
_       _       @chW    @chE    @chR    _       _       _       _       _       _       _       _       _
_       @lM     @chS    @chD    @chF    _       _       @chJ    @chK    @chL    @rM     _       ret
_       _       _       _       _       _       _       _       _       _       _       rsft
_       _       _                       @dspc                   ralt    rmet    rctl
)

(deflayer newSymbol
XX      XX      XX      XX      XX      XX      XX      XX      XX      XX      XX       XX      XX      bspc
XX      7       8       9       @s=     @s;     @s12    @s34    @s56    @s78    @sGrv    XX      XX      XX
XX      4       5       6       @s-     @sQ     @sB     @sSB    @sCB    @sTB    bspc     XX      ret
XX      1       2       3       0       @s.     @s/     @s\     XX      XX      XX       XX
XX      XX      XX                      spc                     XX      XX      XX
)

(deflayer nav
XX      XX      XX      XX      XX      XX      XX      XX      XX      XX      XX       XX      XX      bspc
XX      XX      XX      XX      XX      XX      XX      XX      XX      XX      XX       XX      XX      XX
XX      XX      XX      XX      XX      XX      left    down    up      right   XX       XX      ret
XX      XX      XX      XX      XX      XX      XX      XX      XX      XX      XX       XX
XX      XX      XX                      XX                      XX      XX      XX
)

(defvar
tap 100
hold 200
dT 180
chord-time 80
)

;;layer
(defalias
dspc (multi f24 (tap-hold $tap $hold spc(layer-while-held newSymbol)))
lNav (layer-while-held nav)
)

;;homerow
(defalias
lM (tap-hold $tap $hold a lmet)
lA (tap-hold $tap $hold s lalt)
lS (tap-hold $tap $hold d lsft)
lC (tap-hold $tap $hold f lctl)
rM (tap-hold $tap $hold ; lmet)
rA (tap-hold $tap $hold l lalt)
rS (tap-hold $tap $hold k lsft)
rC (tap-hold $tap $hold j lctl)
)

;;symbol
(defalias
sB (tap-dance $dT (S-9 S-0))
sSB (tap-dance $dT ([ ]))
sCB (tap-dance $dT (S-[ S-]))
sQ (tap-dance $dT (' S-'))
sTB (tap-dance $dT (S-, S-.))
sGrv (tap-dance $dT (grv S-grv))
s12 (tap-dance $dT (S-1 S-2))
s34 (tap-dance $dT (S-3 S-4))
s56 (tap-dance $dT (S-5 S-6))
s78 (tap-dance $dT (S-7 S-8))
s. (tap-dance $dT (. ,))
s= (tap-dance $dT (= S-=))
s- (tap-dance $dT (- S--))
s/ (tap-dance $dT (/ S-/))
s\ (tap-dance $dT (\ S-\))
s; (tap-dance $dT (; S-;))
)

;;chord return
(defalias
chJ (chord return j)
chK (chord return k)
chL (chord return l)
)

(defchords return $chord-time
(j      ) @rC
(   k   ) @rS
(      l) @rA
(j  k   ) @ctrlN
(   k  l) @ctrlP
(j  k  l) ret
)

;;chord layer
(defalias
chS (chord layer s)
chD (chord layer d)
chF (chord layer f)
)

(defchords layer $chord-time
(s      ) @lA
(   d   ) @lS
(      f) @lC
(s  d  f) @lNav
)

;;chord media
(defalias
chW (chord media w)
chE (chord media e)
chR (chord media r)
)

(defchords media $chord-time
(w      ) w
(   e   ) e
(      r) r
(w  e  r) pp
(w  e   ) vold
(   e  r) volu
)

(defalias 
ctrlN (multi lctl n)
ctrlP (multi lctl p)
)
